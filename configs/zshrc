# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Oh My ZSH
if [ ! -d $HOME/.oh-my-zsh ]; then
	sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" "" --keep-zshrc
fi
export ZSH="$HOME/.oh-my-zsh"
source $ZSH/oh-my-zsh.sh

# General settings
HYPHEN_INSENSITIVE="true"
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files under VCS as dirty. This makes repository status check for large repositories much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"


# User configuration
unsetopt share_history
bindkey -r '^[[Z'
zstyle ':completion:*' list-colors
tabs -4
#plugins=(git)

# Externals
source $HOME/.profile
if [ -e $HOME/.zsh-dirs ]; then
	source $HOME/.zsh-dirs
fi
if [ -e $HOME/.cargo/env ]; then
	source $HOME/.cargo/env
fi

# Configure Prompt
autoload -U colors && colors
setopt PROMPT_SUBST
set_prompt() {
	# starter
	PS1='%{$fg_bold[green]%}['
	# ssh indicator
	if [ ! -z $SSH_CONNECTION ]; then
		#PS1+='%{$fg_bold[magenta]%}ssh:'
		PS1+='%{$reset_color%}%{$fg[yellow]%}ssh:'
	fi
	# name@computer
	PS1+='%{$fg_bold[green]%}%n@%m'
	# directory
	PS1+=" %{$fg_bold[white]%}%1~"

	# Git
	if git rev-parse --is-inside-work-tree 2> /dev/null | grep -q 'true' ; then
		PS1+=" %{$fg_bold[blue]%}$(git rev-parse --abbrev-ref HEAD 2> /dev/null)%{$reset_color%}"
		if [ $(git status --short | wc -l) -gt 0 ]; then 
			PS1+="%{$fg[red]%}+$(git status --short | wc -l | awk '{$1=$1};1')%{$reset_color%}"
		fi
	fi

	# exit code
	#PS1+="%b%(?.. $fg[red]%?)"

	# ender
	PS1+="%{$fg_bold[green]%}]$ %{$reset_color%}% "
	# partial command
	PS2="%{$fg[yellow]%}%_%{$reset_color%} %{$fg_bold[green]%}>%{$reset_color%} "
}
precmd_functions+=set_prompt

# Aliases
alias ls="ls -FAh --group-directories-first"
alias cp="cp -r"
alias rm="rm -r"
alias chx="chmod +x"
alias less="less -x4"
alias feh="feh -Z -B '#000000' $@"
alias vim="nvim $@"
alias svim="sudoedit $@"
alias weather='curl wttr.in'
alias zoomkill='killall zoom; rm -rf ~/Documents'

ex () {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)  tar xjf $1 ;;
			*.tar.gz)   tar xzf $1 ;;
			*.bz2)      bunzip2 $1 ;;
			*.rar)      unrar x $1 ;;
			*.gz)       gunzip $1 ;;
			*.tar)      tar xf $1 ;;
			*.tbz2)     tar xjf $1 ;;
			*.tgz)      tar xzf $1 ;;
			*.zip)
				files=$(zipinfo -1 $1)
				dir=""
				if [[ $(echo $files | head -1) =~ '/' ]]; then
					top=$(echo ${files} | head -1 | cut -d"/" -f 1)
					#echo $top
					all=$(echo $files | wc -l)
					dired=$(echo $files | grep $top | wc -l)
					#echo "$all $dired"
					if [[ $all != $dired ]]; then
						dir=${1:0: -4}
					fi
				else
					dir=${1:0: -4}
				fi
				#echo "dir: $dir" ;;
				unzip $1 -d "$dir" ;;
			*.Z)        uncompress $1 ;;
			*.7z)       7z x $1 ;;
			*) echo "'$1' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

